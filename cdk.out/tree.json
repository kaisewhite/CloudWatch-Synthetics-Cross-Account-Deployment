{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "@aws-cdk/core.Construct",
          "version": "1.98.0"
        }
      },
      "ses-cloudwatch-synthetics": {
        "id": "ses-cloudwatch-synthetics",
        "path": "ses-cloudwatch-synthetics",
        "children": {
          "csbsRepository": {
            "id": "csbsRepository",
            "path": "ses-cloudwatch-synthetics/csbsRepository",
            "children": {
              "sescloudwatchsyntheticscsbsBasePipelineB06E8477EventRule": {
                "id": "sescloudwatchsyntheticscsbsBasePipelineB06E8477EventRule",
                "path": "ses-cloudwatch-synthetics/csbsRepository/sescloudwatchsyntheticscsbsBasePipelineB06E8477EventRule",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ses-cloudwatch-synthetics/csbsRepository/sescloudwatchsyntheticscsbsBasePipelineB06E8477EventRule/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                      "aws:cdk:cloudformation:props": {
                        "eventPattern": {
                          "source": ["aws.codecommit"],
                          "resources": ["arn:aws:codecommit:us-east-1:************:ses-cloudwatch-synthetics"],
                          "detail-type": ["CodeCommit Repository State Change"],
                          "detail": {
                            "event": ["referenceCreated", "referenceUpdated"],
                            "referenceName": ["master"]
                          }
                        },
                        "state": "ENABLED",
                        "targets": [
                          {
                            "id": "Target0",
                            "arn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":codepipeline:us-east-1:************:",
                                  {
                                    "Ref": "csbsBasePipelineD6F031B6"
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::GetAtt": ["csbsBasePipelineEventsRole1ED131DF", "Arn"]
                            }
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-events.CfnRule",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-events.Rule",
                  "version": "1.98.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Resource",
              "version": "1.98.0"
            }
          },
          "csbsPipelineRole": {
            "id": "csbsPipelineRole",
            "path": "ses-cloudwatch-synthetics/csbsPipelineRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ses-cloudwatch-synthetics/csbsPipelineRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "codepipeline.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "roleName": "ses-cloudwatch-synthetics-role"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.CfnRole",
                  "version": "1.98.0"
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "ses-cloudwatch-synthetics/csbsPipelineRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ses-cloudwatch-synthetics/csbsPipelineRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "ecr:GetAuthorizationToken",
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": ["s3:GetObject*", "s3:GetBucket*", "s3:List*", "s3:DeleteObject*", "s3:PutObject", "s3:Abort*"],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": ["csbsBasePipelineArtifactsBucket585E8292", "Arn"]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": ["csbsBasePipelineArtifactsBucket585E8292", "Arn"]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": ["kms:Decrypt", "kms:DescribeKey", "kms:Encrypt", "kms:ReEncrypt*", "kms:GenerateDataKey*"],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": ["csbsBasePipelineArtifactsBucketEncryptionKey7ABA67C1", "Arn"]
                              }
                            },
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": ["csbsPipelineRole2883C5BD", "Arn"]
                              }
                            },
                            {
                              "Action": [
                                "codecommit:GetBranch",
                                "codecommit:GetCommit",
                                "codecommit:UploadArchive",
                                "codecommit:GetUploadArchiveStatus",
                                "codecommit:CancelUploadArchive"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:codecommit:us-east-1:************:ses-cloudwatch-synthetics"
                            },
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": ["csbsBasePipelineBuildSynthCodePipelineActionRole94272B12", "Arn"]
                              }
                            },
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": ["csbsBasePipelineUpdatePipelineSelfMutateCodePipelineActionRoleFCF31BBA", "Arn"]
                              }
                            },
                            {
                              "Action": "codecommit:GitPull",
                              "Effect": "Allow",
                              "Resource": "arn:aws:codecommit:us-east-1:************:ses-cloudwatch-synthetics"
                            },
                            {
                              "Action": ["codecommit:EvaluatePullRequestApprovalRules", "codecommit:Get*", "codecommit:Describe*"],
                              "Effect": "Allow",
                              "Resource": "arn:aws:codecommit:us-east-1:************:ses-cloudwatch-synthetics"
                            },
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "csbsPipelineRoleDefaultPolicyA9447AD2",
                        "roles": [
                          {
                            "Ref": "csbsPipelineRole2883C5BD"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Policy",
                  "version": "1.98.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.Role",
              "version": "1.98.0"
            }
          },
          "csbsBasePipeline": {
            "id": "csbsBasePipeline",
            "path": "ses-cloudwatch-synthetics/csbsBasePipeline",
            "children": {
              "ArtifactsBucketEncryptionKey": {
                "id": "ArtifactsBucketEncryptionKey",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/ArtifactsBucketEncryptionKey",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/ArtifactsBucketEncryptionKey/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                      "aws:cdk:cloudformation:props": {
                        "keyPolicy": {
                          "Statement": [
                            {
                              "Action": "kms:*",
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::************:root"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": ["kms:Decrypt", "kms:DescribeKey"],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": ["kms:Decrypt", "kms:DescribeKey"],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-kms.CfnKey",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-kms.Key",
                  "version": "1.98.0"
                }
              },
              "ArtifactsBucketEncryptionKeyAlias": {
                "id": "ArtifactsBucketEncryptionKeyAlias",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/ArtifactsBucketEncryptionKeyAlias",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/ArtifactsBucketEncryptionKeyAlias/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                      "aws:cdk:cloudformation:props": {
                        "aliasName": "alias/codepipeline-sescloudwatchsyntheticscsbsbasepipelineb06e8477",
                        "targetKeyId": {
                          "Fn::GetAtt": ["csbsBasePipelineArtifactsBucketEncryptionKey7ABA67C1", "Arn"]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-kms.CfnAlias",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-kms.Alias",
                  "version": "1.98.0"
                }
              },
              "ArtifactsBucket": {
                "id": "ArtifactsBucket",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/ArtifactsBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/ArtifactsBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "aws:kms",
                                "kmsMasterKeyId": {
                                  "Fn::GetAtt": ["csbsBasePipelineArtifactsBucketEncryptionKey7ABA67C1", "Arn"]
                                }
                              }
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.CfnBucket",
                      "version": "1.98.0"
                    }
                  },
                  "Notifications": {
                    "id": "Notifications",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/ArtifactsBucket/Notifications",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  },
                  "Policy": {
                    "id": "Policy",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/ArtifactsBucket/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/csbsBasePipeline/ArtifactsBucket/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                          "aws:cdk:cloudformation:props": {
                            "bucket": {
                              "Ref": "csbsBasePipelineArtifactsBucket585E8292"
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": ["s3:GetObject*", "s3:GetBucket*", "s3:List*"],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                        ]
                                      ]
                                    }
                                  },
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": ["csbsBasePipelineArtifactsBucket585E8292", "Arn"]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": ["csbsBasePipelineArtifactsBucket585E8292", "Arn"]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": ["s3:GetObject*", "s3:GetBucket*", "s3:List*"],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                        ]
                                      ]
                                    }
                                  },
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": ["csbsBasePipelineArtifactsBucket585E8292", "Arn"]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": ["csbsBasePipelineArtifactsBucket585E8292", "Arn"]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.BucketPolicy",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-s3.Bucket",
                  "version": "1.98.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                  "aws:cdk:cloudformation:props": {
                    "roleArn": {
                      "Fn::GetAtt": ["csbsPipelineRole2883C5BD", "Arn"]
                    },
                    "stages": [
                      {
                        "name": "Source",
                        "actions": [
                          {
                            "name": "Source",
                            "outputArtifacts": [
                              {
                                "name": "Artifact_Source_Source"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Source",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeCommit"
                            },
                            "configuration": {
                              "RepositoryName": "ses-cloudwatch-synthetics",
                              "BranchName": "master",
                              "PollForSourceChanges": false
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": ["csbsPipelineRole2883C5BD", "Arn"]
                            }
                          }
                        ]
                      },
                      {
                        "name": "Build",
                        "actions": [
                          {
                            "name": "Synth",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Source_Source"
                              }
                            ],
                            "outputArtifacts": [
                              {
                                "name": "Artifact_Build_Synth"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "csbsBasePipelineBuildSynthCdkBuildProject47934895"
                              },
                              "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"5dd0141e4aa4e7895bb7f5459e947a0b9dcb7dfd55aae7ad492ab4626bc57f33\"}]"
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": ["csbsBasePipelineBuildSynthCodePipelineActionRole94272B12", "Arn"]
                            }
                          }
                        ]
                      },
                      {
                        "name": "UpdatePipeline",
                        "actions": [
                          {
                            "name": "SelfMutate",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Build_Synth"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "csbsCdkPipelineUpdatePipelineSelfMutationE8151C15"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": ["csbsBasePipelineUpdatePipelineSelfMutateCodePipelineActionRoleFCF31BBA", "Arn"]
                            }
                          }
                        ]
                      },
                      {
                        "name": "SES-Sandbox",
                        "actions": [
                          {
                            "name": "Cloudwatch-Synthetics.Prepare",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Build_Synth"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "SES-Sandbox-Cloudwatch-Synthetics",
                              "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                              "RoleArn": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::************:role/cdk-hnb659fds-cfn-exec-role-************-us-east-1"
                                  ]
                                ]
                              },
                              "ActionMode": "CHANGE_SET_REPLACE",
                              "ChangeSetName": "PipelineChange",
                              "TemplatePath": "Artifact_Build_Synth::assembly-ses-cloudwatch-synthetics-SES-Sandbox/sescloudwatchsyntheticsSESSandboxCloudwatchSyntheticsE3F8D8B6.template.json"
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                ]
                              ]
                            }
                          },
                          {
                            "name": "Cloudwatch-Synthetics.Deploy",
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "SES-Sandbox-Cloudwatch-Synthetics",
                              "ActionMode": "CHANGE_SET_EXECUTE",
                              "ChangeSetName": "PipelineChange"
                            },
                            "runOrder": 2,
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                ]
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "SES-Dev",
                        "actions": [
                          {
                            "name": "Cloudwatch-Synthetics.Prepare",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Build_Synth"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "SES-Dev-Cloudwatch-Synthetics",
                              "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                              "RoleArn": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::************:role/cdk-hnb659fds-cfn-exec-role-************-us-east-1"
                                  ]
                                ]
                              },
                              "ActionMode": "CHANGE_SET_REPLACE",
                              "ChangeSetName": "PipelineChange",
                              "TemplatePath": "Artifact_Build_Synth::assembly-ses-cloudwatch-synthetics-SES-Dev/sescloudwatchsyntheticsSESDevCloudwatchSynthetics7F40E559.template.json"
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                ]
                              ]
                            }
                          },
                          {
                            "name": "Cloudwatch-Synthetics.Deploy",
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "SES-Dev-Cloudwatch-Synthetics",
                              "ActionMode": "CHANGE_SET_EXECUTE",
                              "ChangeSetName": "PipelineChange"
                            },
                            "runOrder": 2,
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                ]
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "SES-Qa",
                        "actions": [
                          {
                            "name": "Cloudwatch-Synthetics.Prepare",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Build_Synth"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "SES-Qa-Cloudwatch-Synthetics",
                              "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                              "RoleArn": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::************:role/cdk-hnb659fds-cfn-exec-role-************-us-east-1"
                                  ]
                                ]
                              },
                              "ActionMode": "CHANGE_SET_REPLACE",
                              "ChangeSetName": "PipelineChange",
                              "TemplatePath": "Artifact_Build_Synth::assembly-ses-cloudwatch-synthetics-SES-Qa/sescloudwatchsyntheticsSESQaCloudwatchSynthetics670B7C8A.template.json"
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                ]
                              ]
                            }
                          },
                          {
                            "name": "Cloudwatch-Synthetics.Deploy",
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "SES-Qa-Cloudwatch-Synthetics",
                              "ActionMode": "CHANGE_SET_EXECUTE",
                              "ChangeSetName": "PipelineChange"
                            },
                            "runOrder": 2,
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                ]
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "SES-Test",
                        "actions": [
                          {
                            "name": "Cloudwatch-Synthetics.Prepare",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Build_Synth"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "SES-Test-Cloudwatch-Synthetics",
                              "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                              "RoleArn": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::************:role/cdk-hnb659fds-cfn-exec-role-************-us-east-1"
                                  ]
                                ]
                              },
                              "ActionMode": "CHANGE_SET_REPLACE",
                              "ChangeSetName": "PipelineChange",
                              "TemplatePath": "Artifact_Build_Synth::assembly-ses-cloudwatch-synthetics-SES-Test/sescloudwatchsyntheticsSESTestCloudwatchSyntheticsBED7C927.template.json"
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                ]
                              ]
                            }
                          },
                          {
                            "name": "Cloudwatch-Synthetics.Deploy",
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "SES-Test-Cloudwatch-Synthetics",
                              "ActionMode": "CHANGE_SET_EXECUTE",
                              "ChangeSetName": "PipelineChange"
                            },
                            "runOrder": 2,
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::************:role/cdk-hnb659fds-deploy-role-************-us-east-1"
                                ]
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "artifactStore": {
                      "type": "S3",
                      "location": {
                        "Ref": "csbsBasePipelineArtifactsBucket585E8292"
                      },
                      "encryptionKey": {
                        "type": "KMS",
                        "id": {
                          "Fn::GetAtt": ["csbsBasePipelineArtifactsBucketEncryptionKey7ABA67C1", "Arn"]
                        }
                      }
                    },
                    "name": "ses-cloudwatch-synthetics",
                    "restartExecutionOnUpdate": true
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline",
                  "version": "1.98.0"
                }
              },
              "Source": {
                "id": "Source",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Source",
                "children": {
                  "Source": {
                    "id": "Source",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Source/Source",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.98.0"
                }
              },
              "EventsRole": {
                "id": "EventsRole",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/EventsRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/EventsRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "events.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.98.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/EventsRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/csbsBasePipeline/EventsRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "codepipeline:StartPipelineExecution",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codepipeline:us-east-1:************:",
                                        {
                                          "Ref": "csbsBasePipelineD6F031B6"
                                        }
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "csbsBasePipelineEventsRoleDefaultPolicyCA5D842D",
                            "roles": [
                              {
                                "Ref": "csbsBasePipelineEventsRole1ED131DF"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Policy",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.98.0"
                }
              },
              "Build": {
                "id": "Build",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build",
                "children": {
                  "Synth": {
                    "id": "Synth",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::************:root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnRole",
                              "version": "1.98.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": ["codebuild:BatchGetBuilds", "codebuild:StartBuild", "codebuild:StopBuild"],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": ["csbsBasePipelineBuildSynthCdkBuildProject47934895", "Arn"]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "csbsBasePipelineBuildSynthCodePipelineActionRoleDefaultPolicy4F18C07C",
                                    "roles": [
                                      {
                                        "Ref": "csbsBasePipelineBuildSynthCodePipelineActionRole94272B12"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                                  "version": "1.98.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.Policy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Role",
                          "version": "1.98.0"
                        }
                      },
                      "CdkBuildProject": {
                        "id": "CdkBuildProject",
                        "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth/CdkBuildProject",
                        "children": {
                          "Role": {
                            "id": "Role",
                            "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth/CdkBuildProject/Role",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth/CdkBuildProject/Role/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "codebuild.amazonaws.com"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.CfnRole",
                                  "version": "1.98.0"
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth/CdkBuildProject/Role/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth/CdkBuildProject/Role/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "arn:",
                                                      {
                                                        "Ref": "AWS::Partition"
                                                      },
                                                      ":logs:us-east-1:************:log-group:/aws/codebuild/",
                                                      {
                                                        "Ref": "csbsBasePipelineBuildSynthCdkBuildProject47934895"
                                                      }
                                                    ]
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "arn:",
                                                      {
                                                        "Ref": "AWS::Partition"
                                                      },
                                                      ":logs:us-east-1:************:log-group:/aws/codebuild/",
                                                      {
                                                        "Ref": "csbsBasePipelineBuildSynthCdkBuildProject47934895"
                                                      },
                                                      ":*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Action": [
                                                "codebuild:CreateReportGroup",
                                                "codebuild:CreateReport",
                                                "codebuild:UpdateReport",
                                                "codebuild:BatchPutTestCases",
                                                "codebuild:BatchPutCodeCoverages"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::Join": [
                                                  "",
                                                  [
                                                    "arn:",
                                                    {
                                                      "Ref": "AWS::Partition"
                                                    },
                                                    ":codebuild:us-east-1:************:report-group/",
                                                    {
                                                      "Ref": "csbsBasePipelineBuildSynthCdkBuildProject47934895"
                                                    },
                                                    "-*"
                                                  ]
                                                ]
                                              }
                                            },
                                            {
                                              "Action": "ecr:GetAuthorizationToken",
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": ["s3:GetObject*", "s3:GetBucket*", "s3:List*", "s3:DeleteObject*", "s3:PutObject", "s3:Abort*"],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": ["csbsBasePipelineArtifactsBucket585E8292", "Arn"]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": ["csbsBasePipelineArtifactsBucket585E8292", "Arn"]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Action": ["kms:Decrypt", "kms:DescribeKey", "kms:Encrypt", "kms:ReEncrypt*", "kms:GenerateDataKey*"],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": ["csbsBasePipelineArtifactsBucketEncryptionKey7ABA67C1", "Arn"]
                                              }
                                            },
                                            {
                                              "Action": ["kms:Decrypt", "kms:Encrypt", "kms:ReEncrypt*", "kms:GenerateDataKey*"],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": ["csbsBasePipelineArtifactsBucketEncryptionKey7ABA67C1", "Arn"]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "csbsBasePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy5006D9DD",
                                        "roles": [
                                          {
                                            "Ref": "csbsBasePipelineBuildSynthCdkBuildProjectRole4D0EE49A"
                                          }
                                        ]
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                                      "version": "1.98.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.Policy",
                                  "version": "1.98.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.Role",
                              "version": "1.98.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/csbsBasePipeline/Build/Synth/CdkBuildProject/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                              "aws:cdk:cloudformation:props": {
                                "artifacts": {
                                  "type": "CODEPIPELINE"
                                },
                                "environment": {
                                  "type": "LINUX_CONTAINER",
                                  "image": "aws/codebuild/standard:4.0",
                                  "imagePullCredentialsType": "CODEBUILD",
                                  "privilegedMode": true,
                                  "computeType": "BUILD_GENERAL1_SMALL"
                                },
                                "serviceRole": {
                                  "Fn::GetAtt": ["csbsBasePipelineBuildSynthCdkBuildProjectRole4D0EE49A", "Arn"]
                                },
                                "source": {
                                  "type": "CODEPIPELINE",
                                  "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"npm install -g aws-cdk cdk-assume-role-credential-plugin\",\n        \"pip3 install --upgrade wheel setuptools pip\",\n        \"pip3 --disable-pip-version-check --no-cache-dir install --pre --upgrade poetry\",\n        \"poetry config virtualenvs.create false && poetry install --no-interaction --no-ansi\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk synth\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"cdk.out\",\n    \"files\": \"**/*\"\n  }\n}"
                                },
                                "encryptionKey": {
                                  "Fn::GetAtt": ["csbsBasePipelineArtifactsBucketEncryptionKey7ABA67C1", "Arn"]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-codebuild.CfnProject",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-codebuild.PipelineProject",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.98.0"
                }
              },
              "UpdatePipeline": {
                "id": "UpdatePipeline",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/UpdatePipeline",
                "children": {
                  "SelfMutate": {
                    "id": "SelfMutate",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/UpdatePipeline/SelfMutate",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "ses-cloudwatch-synthetics/csbsBasePipeline/UpdatePipeline/SelfMutate/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/csbsBasePipeline/UpdatePipeline/SelfMutate/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::************:root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnRole",
                              "version": "1.98.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "ses-cloudwatch-synthetics/csbsBasePipeline/UpdatePipeline/SelfMutate/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/UpdatePipeline/SelfMutate/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": ["codebuild:BatchGetBuilds", "codebuild:StartBuild", "codebuild:StopBuild"],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": ["csbsCdkPipelineUpdatePipelineSelfMutationE8151C15", "Arn"]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "csbsBasePipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicy6F8F850E",
                                    "roles": [
                                      {
                                        "Ref": "csbsBasePipelineUpdatePipelineSelfMutateCodePipelineActionRoleFCF31BBA"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                                  "version": "1.98.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.Policy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Role",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.98.0"
                }
              },
              "SES-Sandbox": {
                "id": "SES-Sandbox",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Sandbox",
                "children": {
                  "Cloudwatch-Synthetics.Deploy": {
                    "id": "Cloudwatch-Synthetics.Deploy",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Sandbox/Cloudwatch-Synthetics.Deploy",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  },
                  "Cloudwatch-Synthetics.Prepare": {
                    "id": "Cloudwatch-Synthetics.Prepare",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Sandbox/Cloudwatch-Synthetics.Prepare",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.98.0"
                }
              },
              "SES-Dev": {
                "id": "SES-Dev",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Dev",
                "children": {
                  "Cloudwatch-Synthetics.Deploy": {
                    "id": "Cloudwatch-Synthetics.Deploy",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Dev/Cloudwatch-Synthetics.Deploy",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  },
                  "Cloudwatch-Synthetics.Prepare": {
                    "id": "Cloudwatch-Synthetics.Prepare",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Dev/Cloudwatch-Synthetics.Prepare",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.98.0"
                }
              },
              "SES-Qa": {
                "id": "SES-Qa",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Qa",
                "children": {
                  "Cloudwatch-Synthetics.Deploy": {
                    "id": "Cloudwatch-Synthetics.Deploy",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Qa/Cloudwatch-Synthetics.Deploy",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  },
                  "Cloudwatch-Synthetics.Prepare": {
                    "id": "Cloudwatch-Synthetics.Prepare",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Qa/Cloudwatch-Synthetics.Prepare",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.98.0"
                }
              },
              "SES-Test": {
                "id": "SES-Test",
                "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Test",
                "children": {
                  "Cloudwatch-Synthetics.Deploy": {
                    "id": "Cloudwatch-Synthetics.Deploy",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Test/Cloudwatch-Synthetics.Deploy",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  },
                  "Cloudwatch-Synthetics.Prepare": {
                    "id": "Cloudwatch-Synthetics.Prepare",
                    "path": "ses-cloudwatch-synthetics/csbsBasePipeline/SES-Test/Cloudwatch-Synthetics.Prepare",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.98.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-codepipeline.Pipeline",
              "version": "1.98.0"
            }
          },
          "csbsCdkPipeline": {
            "id": "csbsCdkPipeline",
            "path": "ses-cloudwatch-synthetics/csbsCdkPipeline",
            "children": {
              "UpdatePipeline": {
                "id": "UpdatePipeline",
                "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/UpdatePipeline",
                "children": {
                  "SelfMutation": {
                    "id": "SelfMutation",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/UpdatePipeline/SelfMutation",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/UpdatePipeline/SelfMutation/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/UpdatePipeline/SelfMutation/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "codebuild.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnRole",
                              "version": "1.98.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/UpdatePipeline/SelfMutation/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/UpdatePipeline/SelfMutation/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":logs:us-east-1:************:log-group:/aws/codebuild/",
                                                  {
                                                    "Ref": "csbsCdkPipelineUpdatePipelineSelfMutationE8151C15"
                                                  }
                                                ]
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":logs:us-east-1:************:log-group:/aws/codebuild/",
                                                  {
                                                    "Ref": "csbsCdkPipelineUpdatePipelineSelfMutationE8151C15"
                                                  },
                                                  ":*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "codebuild:CreateReportGroup",
                                            "codebuild:CreateReport",
                                            "codebuild:UpdateReport",
                                            "codebuild:BatchPutTestCases",
                                            "codebuild:BatchPutCodeCoverages"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":codebuild:us-east-1:************:report-group/",
                                                {
                                                  "Ref": "csbsCdkPipelineUpdatePipelineSelfMutationE8151C15"
                                                },
                                                "-*"
                                              ]
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Resource": ["arn:*:iam::*:role/*-deploy-role-*", "arn:*:iam::*:role/*-publishing-role-*"]
                                        },
                                        {
                                          "Action": "cloudformation:DescribeStacks",
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        },
                                        {
                                          "Action": "s3:ListBucket",
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        },
                                        {
                                          "Action": ["s3:GetObject*", "s3:GetBucket*", "s3:List*"],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": ["csbsBasePipelineArtifactsBucket585E8292", "Arn"]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": ["csbsBasePipelineArtifactsBucket585E8292", "Arn"]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": ["kms:Decrypt", "kms:DescribeKey"],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": ["csbsBasePipelineArtifactsBucketEncryptionKey7ABA67C1", "Arn"]
                                          }
                                        },
                                        {
                                          "Action": ["kms:Decrypt", "kms:Encrypt", "kms:ReEncrypt*", "kms:GenerateDataKey*"],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": ["csbsBasePipelineArtifactsBucketEncryptionKey7ABA67C1", "Arn"]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "csbsCdkPipelineUpdatePipelineSelfMutationRoleDefaultPolicyCF82FEDA",
                                    "roles": [
                                      {
                                        "Ref": "csbsCdkPipelineUpdatePipelineSelfMutationRoleEBABAED7"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                                  "version": "1.98.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.Policy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Role",
                          "version": "1.98.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/UpdatePipeline/SelfMutation/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                          "aws:cdk:cloudformation:props": {
                            "artifacts": {
                              "type": "CODEPIPELINE"
                            },
                            "environment": {
                              "type": "LINUX_CONTAINER",
                              "image": "aws/codebuild/standard:4.0",
                              "imagePullCredentialsType": "CODEBUILD",
                              "privilegedMode": false,
                              "computeType": "BUILD_GENERAL1_SMALL"
                            },
                            "serviceRole": {
                              "Fn::GetAtt": ["csbsCdkPipelineUpdatePipelineSelfMutationRoleEBABAED7", "Arn"]
                            },
                            "source": {
                              "type": "CODEPIPELINE",
                              "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": \"npm install -g aws-cdk\"\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk -a . deploy ses-cloudwatch-synthetics --require-approval=never --verbose\"\n      ]\n    }\n  }\n}"
                            },
                            "encryptionKey": {
                              "Fn::GetAtt": ["csbsBasePipelineArtifactsBucketEncryptionKey7ABA67C1", "Arn"]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-codebuild.CfnProject",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-codebuild.PipelineProject",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/pipelines.UpdatePipelineAction",
                  "version": "1.98.0"
                }
              },
              "Assets": {
                "id": "Assets",
                "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/Assets",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.98.0"
                }
              },
              "SES-Sandbox": {
                "id": "SES-Sandbox",
                "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Sandbox",
                "children": {
                  "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1": {
                    "id": "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Sandbox/arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1": {
                    "id": "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Sandbox/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "children": {
                      "8389e75f-0810-4838-bf64-d6f85a95cf83": {
                        "id": "8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Sandbox/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1/8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Construct",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1": {
                    "id": "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Sandbox/arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1": {
                    "id": "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Sandbox/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/pipelines.CdkStage",
                  "version": "1.98.0"
                }
              },
              "SES-Dev": {
                "id": "SES-Dev",
                "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Dev",
                "children": {
                  "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1": {
                    "id": "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Dev/arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1": {
                    "id": "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Dev/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "children": {
                      "8389e75f-0810-4838-bf64-d6f85a95cf83": {
                        "id": "8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Dev/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1/8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Construct",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1": {
                    "id": "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Dev/arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1": {
                    "id": "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Dev/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/pipelines.CdkStage",
                  "version": "1.98.0"
                }
              },
              "SES-Qa": {
                "id": "SES-Qa",
                "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Qa",
                "children": {
                  "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1": {
                    "id": "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Qa/arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1": {
                    "id": "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Qa/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "children": {
                      "8389e75f-0810-4838-bf64-d6f85a95cf83": {
                        "id": "8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Qa/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1/8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Construct",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1": {
                    "id": "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Qa/arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1": {
                    "id": "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Qa/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/pipelines.CdkStage",
                  "version": "1.98.0"
                }
              },
              "SES-Test": {
                "id": "SES-Test",
                "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Test",
                "children": {
                  "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1": {
                    "id": "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Test/arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1": {
                    "id": "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Test/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1",
                    "children": {
                      "8389e75f-0810-4838-bf64-d6f85a95cf83": {
                        "id": "8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Test/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-deploy-role-************-us-east-1/8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Construct",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1": {
                    "id": "arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Test/arn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1": {
                    "id": "ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/csbsCdkPipeline/SES-Test/ImmutableRolearn:${AWS::Partition}:iam::************:role--cdk-hnb659fds-cfn-exec-role-************-us-east-1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/pipelines.CdkStage",
                  "version": "1.98.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/pipelines.CdkPipeline",
              "version": "1.98.0"
            }
          },
          "SES-Sandbox": {
            "id": "SES-Sandbox",
            "path": "ses-cloudwatch-synthetics/SES-Sandbox",
            "children": {
              "Cloudwatch-Synthetics": {
                "id": "Cloudwatch-Synthetics",
                "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics",
                "children": {
                  "CloudWatchSynthetics-role": {
                    "id": "CloudWatchSynthetics-role",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/CloudWatchSynthetics-role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/CloudWatchSynthetics-role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "description": "Allows Lambda functions to call AWS services on your behalf.",
                            "roleName": "CloudWatchSynthetics-role"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnRole",
                          "version": "1.98.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/CloudWatchSynthetics-role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/CloudWatchSynthetics-role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ssm:DescribeParameters",
                                        "ssm:GetParameters",
                                        "ssm:GetParameter",
                                        "sts:GetCallerIdentity",
                                        "cloudwatch:PutMetricData",
                                        "ec2:CreateNetworkInterface",
                                        "s3:ListAllMyBuckets",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DeleteNetworkInterface",
                                        "xray:*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "CloudWatchSyntheticsroleDefaultPolicy567E931F",
                                "roles": [
                                  {
                                    "Ref": "CloudWatchSyntheticsrole2174489A"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Policy",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Role",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-cw-syn-results-************-us-east-1": {
                    "id": "sandbox-cw-syn-results-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cw-syn-results-************-us-east-1",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cw-syn-results-************-us-east-1/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                          "aws:cdk:cloudformation:props": {
                            "bucketName": "sandbox-cw-syn-results-************-us-east-1"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.CfnBucket",
                          "version": "1.98.0"
                        }
                      },
                      "Notifications": {
                        "id": "Notifications",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cw-syn-results-************-us-east-1/Notifications",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Construct",
                          "version": "1.98.0"
                        }
                      },
                      "Policy": {
                        "id": "Policy",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cw-syn-results-************-us-east-1/Policy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cw-syn-results-************-us-east-1/Policy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                              "aws:cdk:cloudformation:props": {
                                "bucket": {
                                  "Ref": "sandboxcwsynresults************useast1B837BC99"
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:*",
                                      "Effect": "Allow",
                                      "Principal": "*",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": ["sandboxcwsynresults************useast1B837BC99", "Arn"]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": ["sandboxcwsynresults************useast1B837BC99", "Arn"]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ],
                                      "Sid": "AllowRead"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketPolicy",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.Bucket",
                      "version": "1.98.0"
                    }
                  },
                  "LookupVpc": {
                    "id": "LookupVpc",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/LookupVpc",
                    "children": {
                      "PublicSubnet1": {
                        "id": "PublicSubnet1",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/LookupVpc/PublicSubnet1",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PublicSubnet2": {
                        "id": "PublicSubnet2",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/LookupVpc/PublicSubnet2",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PrivateSubnet1": {
                        "id": "PrivateSubnet1",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/LookupVpc/PrivateSubnet1",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PrivateSubnet2": {
                        "id": "PrivateSubnet2",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/LookupVpc/PrivateSubnet2",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PrivateSubnet3": {
                        "id": "PrivateSubnet3",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/LookupVpc/PrivateSubnet3",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PrivateSubnet4": {
                        "id": "PrivateSubnet4",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/LookupVpc/PrivateSubnet4",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "CloudWatchSyntheticsSG": {
                    "id": "CloudWatchSyntheticsSG",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/CloudWatchSyntheticsSG",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/CloudWatchSyntheticsSG/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Allows CloudWatch Synthetic Canaries to hit Alfresco endpoints",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "vpcId": "vpc-03da4c32bdfe44451"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
                      "version": "1.98.0"
                    }
                  },
                  "Imported-sandbox-Topic": {
                    "id": "Imported-sandbox-Topic",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/Imported-sandbox-Topic",
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-sns.TopicBase",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-cnt-srv-live": {
                    "id": "sandbox-cnt-srv-live",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cnt-srv-live",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "sandboxcwsynresults************useast1B837BC99"
                              },
                              "/canary/content-service-live"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" % json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" % response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    url1 = 'https://alfresco-ses-sandbox-internal.srrcsbs.org/alfresco/api/-default-/public/alfresco/versions/1/probes/-live-'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {}\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "sandbox-cnt-srv-live",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0343c1b675f340001", "subnet-0f630a9970b461e7a"],
                          "vpcId": "vpc-03da4c32bdfe44451"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-cnt-srv-live-Alarm": {
                    "id": "sandbox-cnt-srv-live-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cnt-srv-live-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cnt-srv-live-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-sandbox-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "sandbox-Alfresco-content-service-live-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "sandbox-cnt-srv-live"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-cnt-srv-rdy": {
                    "id": "sandbox-cnt-srv-rdy",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cnt-srv-rdy",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "sandboxcwsynresults************useast1B837BC99"
                              },
                              "/canary/content_service_ready"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" % json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" % response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    url1 = 'https://alfresco-ses-sandbox-internal.srrcsbs.org/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {}\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "sandbox-cnt-srv-rdy",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0343c1b675f340001", "subnet-0f630a9970b461e7a"],
                          "vpcId": "vpc-03da4c32bdfe44451"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-cnt-srv-rdy-Alarm": {
                    "id": "sandbox-cnt-srv-rdy-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cnt-srv-rdy-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cnt-srv-rdy-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-sandbox-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "sandbox-Alfresco-content_service_ready-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "sandbox-cnt-srv-rdy"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-cnt-srv-sum": {
                    "id": "sandbox-cnt-srv-sum",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cnt-srv-sum",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "sandboxcwsynresults************useast1B837BC99"
                              },
                              "/canary/content_service_summary"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(\n            parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" %\n                json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" %\n                                response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/sandbox-alfresco-alfresco_password', WithDecryption=True)\n    username = \"admin\"\n    password = (parameter['Parameter']['Value'])\n\n    url1 = f'https://alfresco-ses-sandbox-internal.srrcsbs.org/alfresco/s/enterprise/admin/admin-systemsummary'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {\n        \"Authorization\": \"Basic {}\".format(\n            b64encode(bytes(f\"{username}:{password}\", \"utf-8\")).decode(\"ascii\")\n        )\n    }\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "sandbox-cnt-srv-sum",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0343c1b675f340001", "subnet-0f630a9970b461e7a"],
                          "vpcId": "vpc-03da4c32bdfe44451"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-cnt-srv-sum-Alarm": {
                    "id": "sandbox-cnt-srv-sum-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cnt-srv-sum-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-cnt-srv-sum-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-sandbox-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "sandbox-Alfresco-content_service_summary-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "sandbox-cnt-srv-sum"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-dwld-srv": {
                    "id": "sandbox-dwld-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-dwld-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "sandboxcwsynresults************useast1B837BC99"
                              },
                              "/canary/download_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\ndef get_token():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/sandbox-alfresco-token_password', WithDecryption=True)\n    username = f'sandbox-token-ses-admin'\n    password = (parameter['Parameter']['Value'])\n\n    conn = http.client.HTTPSConnection(\n        \"alfresco-tokenservice-ses-dev-internal.srrcsbs.org\")\n\n    payload = json.dumps({\n        \"download\": True,\n        \"preview\": True,\n        \"nodeId\": \"5fa74ad3-9b5b-461b-9df5-de407f1f4fe7\",\n        \"user\": \"Jane Doe\"\n    })\n    headers = {\n        'Authorization': 'Basic {}'.format(\n            b64encode(bytes(f'{username}:{password}',\n                            'utf-8')).decode('ascii')\n        ),\n        'Content-Type': 'application/json',\n    }\n    conn.request(\"POST\", \"/tokenservice/services/api/token\", payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    logger.info(data.decode(\"utf-8\"))\n    token_id = json.loads(data.decode(\"utf-8\"))[\"tokenId\"]\n\n    logger.info(\"Canary successfully executed\")\n    return token_id\n\n\ndef main():\n\n    token_id = get_token()\n    \n    conn = http.client.HTTPSConnection(f'alfresco-ses-downloadservice-sandbox-internal.srrcsbs.org')\n    payload = ''\n    headers = {}\n    conn.request(\"GET\", f'/downloadservice/download?documentId={token_id}', payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    logger.info(data)\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()\n"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "sandbox-dwld-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0343c1b675f340001", "subnet-0f630a9970b461e7a"],
                          "vpcId": "vpc-03da4c32bdfe44451"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-dwld-srv-Alarm": {
                    "id": "sandbox-dwld-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-dwld-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-dwld-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-sandbox-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "sandbox-Alfresco-download_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "sandbox-dwld-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-pdf-srv": {
                    "id": "sandbox-pdf-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-pdf-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "sandboxcwsynresults************useast1B837BC99"
                              },
                              "/canary/pdftron_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "from aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    url = f'https://alfresco-ses-tronwebserver-sandbox.srrcsbs.org/preview/?filename=budget.xls&documentId=19a591d23db0786ff8e779df9a3923e8fe1840a655f91cc039831ef26d139280'\n\n    # Set screenshot option\n    takeScreenshot = True\n\n    browser = syn_webdriver.Chrome()\n    browser.get(url)\n\n    if takeScreenshot:\n        browser.save_screenshot(\"loaded.png\")\n\n    response_code = syn_webdriver.get_http_response(url)\n    if not response_code or response_code < 200 or response_code > 299:\n        raise Exception(\"Failed to load page!\")\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    # user defined log statements using synthetics_logger\n    logger.info(\"Selenium Python heartbeat canary\")\n    return main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "sandbox-pdf-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0343c1b675f340001", "subnet-0f630a9970b461e7a"],
                          "vpcId": "vpc-03da4c32bdfe44451"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-pdf-srv-Alarm": {
                    "id": "sandbox-pdf-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-pdf-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-pdf-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-sandbox-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "sandbox-Alfresco-pdftron_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "sandbox-pdf-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-share-srv": {
                    "id": "sandbox-share-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-share-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "sandboxcwsynresults************useast1B837BC99"
                              },
                              "/canary/share_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "from aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    url = f'https://alfresco-share-ses-sandbox-internal.srrcsbs.org/share/page/user/admin/dashboard'\n\n    # Set screenshot option\n    takeScreenshot = True\n\n    browser = syn_webdriver.Chrome()\n    browser.get(url)\n\n    if takeScreenshot:\n        browser.save_screenshot(\"loaded.png\")\n\n    response_code = syn_webdriver.get_http_response(url)\n    if not response_code or response_code < 200 or response_code > 299:\n        raise Exception(\"Failed to load page!\")\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    # user defined log statements using synthetics_logger\n    logger.info(\"Selenium Python heartbeat canary\")\n    return main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "sandbox-share-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0343c1b675f340001", "subnet-0f630a9970b461e7a"],
                          "vpcId": "vpc-03da4c32bdfe44451"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-share-srv-Alarm": {
                    "id": "sandbox-share-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-share-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-share-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-sandbox-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "sandbox-Alfresco-share_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "sandbox-share-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-token-srv": {
                    "id": "sandbox-token-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-token-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "sandboxcwsynresults************useast1B837BC99"
                              },
                              "/canary/token_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/sandbox-alfresco-token_password', WithDecryption=True)\n    username = f'sandbox-token-ses-admin'\n    password = (parameter['Parameter']['Value'])\n\n    conn = http.client.HTTPSConnection(\n        \"alfresco-tokenservice-ses-dev-internal.srrcsbs.org\")\n\n    payload = json.dumps({\n        \"download\": True,\n        \"preview\": True,\n        \"nodeId\": \"5fa74ad3-9b5b-461b-9df5-de407f1f4fe7\",\n        \"user\": \"Jane Doe\"\n    })\n    headers = {\n        'Authorization': 'Basic {}'.format(\n            b64encode(bytes(f'{username}:{password}',\n                            'utf-8')).decode('ascii')\n        ),\n        'Content-Type': 'application/json'\n    }\n    conn.request(\"POST\", \"/tokenservice/services/api/token\", payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    print(data.decode(\"utf-8\"))\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "sandbox-token-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0343c1b675f340001", "subnet-0f630a9970b461e7a"],
                          "vpcId": "vpc-03da4c32bdfe44451"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "sandbox-token-srv-Alarm": {
                    "id": "sandbox-token-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-token-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/sandbox-token-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-sandbox-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "sandbox-Alfresco-token_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "sandbox-token-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "CDKMetadata": {
                    "id": "CDKMetadata",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/CDKMetadata",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/CDKMetadata/Default",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.CfnResource",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  },
                  "BootstrapVersion": {
                    "id": "BootstrapVersion",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/BootstrapVersion",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnParameter",
                      "version": "1.98.0"
                    }
                  },
                  "CheckBootstrapVersion": {
                    "id": "CheckBootstrapVersion",
                    "path": "ses-cloudwatch-synthetics/SES-Sandbox/Cloudwatch-Synthetics/CheckBootstrapVersion",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnRule",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Stack",
                  "version": "1.98.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Stage",
              "version": "1.98.0"
            }
          },
          "SES-Dev": {
            "id": "SES-Dev",
            "path": "ses-cloudwatch-synthetics/SES-Dev",
            "children": {
              "Cloudwatch-Synthetics": {
                "id": "Cloudwatch-Synthetics",
                "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics",
                "children": {
                  "CloudWatchSynthetics-role": {
                    "id": "CloudWatchSynthetics-role",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/CloudWatchSynthetics-role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/CloudWatchSynthetics-role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "description": "Allows Lambda functions to call AWS services on your behalf.",
                            "roleName": "CloudWatchSynthetics-role"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnRole",
                          "version": "1.98.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/CloudWatchSynthetics-role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/CloudWatchSynthetics-role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ssm:DescribeParameters",
                                        "ssm:GetParameters",
                                        "ssm:GetParameter",
                                        "sts:GetCallerIdentity",
                                        "cloudwatch:PutMetricData",
                                        "ec2:CreateNetworkInterface",
                                        "s3:ListAllMyBuckets",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DeleteNetworkInterface",
                                        "xray:*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "CloudWatchSyntheticsroleDefaultPolicy567E931F",
                                "roles": [
                                  {
                                    "Ref": "CloudWatchSyntheticsrole2174489A"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Policy",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Role",
                      "version": "1.98.0"
                    }
                  },
                  "dev-cw-syn-results-************-us-east-1": {
                    "id": "dev-cw-syn-results-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cw-syn-results-************-us-east-1",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cw-syn-results-************-us-east-1/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                          "aws:cdk:cloudformation:props": {
                            "bucketName": "dev-cw-syn-results-************-us-east-1"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.CfnBucket",
                          "version": "1.98.0"
                        }
                      },
                      "Notifications": {
                        "id": "Notifications",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cw-syn-results-************-us-east-1/Notifications",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Construct",
                          "version": "1.98.0"
                        }
                      },
                      "Policy": {
                        "id": "Policy",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cw-syn-results-************-us-east-1/Policy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cw-syn-results-************-us-east-1/Policy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                              "aws:cdk:cloudformation:props": {
                                "bucket": {
                                  "Ref": "devcwsynresults************useast1B52875DF"
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:*",
                                      "Effect": "Allow",
                                      "Principal": "*",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": ["devcwsynresults************useast1B52875DF", "Arn"]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": ["devcwsynresults************useast1B52875DF", "Arn"]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ],
                                      "Sid": "AllowRead"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketPolicy",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.Bucket",
                      "version": "1.98.0"
                    }
                  },
                  "LookupVpc": {
                    "id": "LookupVpc",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/LookupVpc",
                    "children": {
                      "PublicSubnet1": {
                        "id": "PublicSubnet1",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/LookupVpc/PublicSubnet1",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PublicSubnet2": {
                        "id": "PublicSubnet2",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/LookupVpc/PublicSubnet2",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PrivateSubnet1": {
                        "id": "PrivateSubnet1",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/LookupVpc/PrivateSubnet1",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PrivateSubnet2": {
                        "id": "PrivateSubnet2",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/LookupVpc/PrivateSubnet2",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "CloudWatchSyntheticsSG": {
                    "id": "CloudWatchSyntheticsSG",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/CloudWatchSyntheticsSG",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/CloudWatchSyntheticsSG/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Allows CloudWatch Synthetic Canaries to hit Alfresco endpoints",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "vpcId": "vpc-0845cc5232f7b37ed"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
                      "version": "1.98.0"
                    }
                  },
                  "Imported-nonprod-Topic": {
                    "id": "Imported-nonprod-Topic",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/Imported-nonprod-Topic",
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-sns.TopicBase",
                      "version": "1.98.0"
                    }
                  },
                  "dev-cnt-srv-live": {
                    "id": "dev-cnt-srv-live",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cnt-srv-live",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "devcwsynresults************useast1B52875DF"
                              },
                              "/canary/content-service-live"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" % json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" % response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    url1 = 'https://alfresco-ses-dev-internal.srrcsbs.org/alfresco/api/-default-/public/alfresco/versions/1/probes/-live-'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {}\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "dev-cnt-srv-live",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-062c110ab35d1d77f", "subnet-04dd2f7d9ed7eefa5"],
                          "vpcId": "vpc-0845cc5232f7b37ed"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "dev-cnt-srv-live-Alarm": {
                    "id": "dev-cnt-srv-live-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cnt-srv-live-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cnt-srv-live-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "dev-Alfresco-content-service-live-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "dev-cnt-srv-live"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "dev-cnt-srv-rdy": {
                    "id": "dev-cnt-srv-rdy",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cnt-srv-rdy",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "devcwsynresults************useast1B52875DF"
                              },
                              "/canary/content_service_ready"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" % json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" % response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    url1 = 'https://alfresco-ses-dev-internal.srrcsbs.org/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {}\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "dev-cnt-srv-rdy",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-062c110ab35d1d77f", "subnet-04dd2f7d9ed7eefa5"],
                          "vpcId": "vpc-0845cc5232f7b37ed"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "dev-cnt-srv-rdy-Alarm": {
                    "id": "dev-cnt-srv-rdy-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cnt-srv-rdy-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cnt-srv-rdy-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "dev-Alfresco-content_service_ready-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "dev-cnt-srv-rdy"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "dev-cnt-srv-sum": {
                    "id": "dev-cnt-srv-sum",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cnt-srv-sum",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "devcwsynresults************useast1B52875DF"
                              },
                              "/canary/content_service_summary"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(\n            parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" %\n                json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" %\n                                response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/dev-alfresco-alfresco_password', WithDecryption=True)\n    username = \"admin\"\n    password = (parameter['Parameter']['Value'])\n\n    url1 = f'https://alfresco-ses-dev-internal.srrcsbs.org/alfresco/s/enterprise/admin/admin-systemsummary'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {\n        \"Authorization\": \"Basic {}\".format(\n            b64encode(bytes(f\"{username}:{password}\", \"utf-8\")).decode(\"ascii\")\n        )\n    }\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "dev-cnt-srv-sum",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-062c110ab35d1d77f", "subnet-04dd2f7d9ed7eefa5"],
                          "vpcId": "vpc-0845cc5232f7b37ed"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "dev-cnt-srv-sum-Alarm": {
                    "id": "dev-cnt-srv-sum-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cnt-srv-sum-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-cnt-srv-sum-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "dev-Alfresco-content_service_summary-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "dev-cnt-srv-sum"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "dev-dwld-srv": {
                    "id": "dev-dwld-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-dwld-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "devcwsynresults************useast1B52875DF"
                              },
                              "/canary/download_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\ndef get_token():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/dev-alfresco-token_password', WithDecryption=True)\n    username = f'dev-token-ses-admin'\n    password = (parameter['Parameter']['Value'])\n\n    conn = http.client.HTTPSConnection(\n        \"alfresco-tokenservice-ses-dev-internal.srrcsbs.org\")\n\n    payload = json.dumps({\n        \"download\": True,\n        \"preview\": True,\n        \"nodeId\": \"5fa74ad3-9b5b-461b-9df5-de407f1f4fe7\",\n        \"user\": \"Jane Doe\"\n    })\n    headers = {\n        'Authorization': 'Basic {}'.format(\n            b64encode(bytes(f'{username}:{password}',\n                            'utf-8')).decode('ascii')\n        ),\n        'Content-Type': 'application/json',\n    }\n    conn.request(\"POST\", \"/tokenservice/services/api/token\", payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    logger.info(data.decode(\"utf-8\"))\n    token_id = json.loads(data.decode(\"utf-8\"))[\"tokenId\"]\n\n    logger.info(\"Canary successfully executed\")\n    return token_id\n\n\ndef main():\n\n    token_id = get_token()\n    \n    conn = http.client.HTTPSConnection(f'alfresco-ses-downloadservice-dev-internal.srrcsbs.org')\n    payload = ''\n    headers = {}\n    conn.request(\"GET\", f'/downloadservice/download?documentId={token_id}', payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    logger.info(data)\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()\n"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "dev-dwld-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-062c110ab35d1d77f", "subnet-04dd2f7d9ed7eefa5"],
                          "vpcId": "vpc-0845cc5232f7b37ed"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "dev-dwld-srv-Alarm": {
                    "id": "dev-dwld-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-dwld-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-dwld-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "dev-Alfresco-download_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "dev-dwld-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "dev-pdf-srv": {
                    "id": "dev-pdf-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-pdf-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "devcwsynresults************useast1B52875DF"
                              },
                              "/canary/pdftron_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "from aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    url = f'https://alfresco-ses-tronwebserver-dev.srrcsbs.org/preview/?filename=budget.xls&documentId=19a591d23db0786ff8e779df9a3923e8fe1840a655f91cc039831ef26d139280'\n\n    # Set screenshot option\n    takeScreenshot = True\n\n    browser = syn_webdriver.Chrome()\n    browser.get(url)\n\n    if takeScreenshot:\n        browser.save_screenshot(\"loaded.png\")\n\n    response_code = syn_webdriver.get_http_response(url)\n    if not response_code or response_code < 200 or response_code > 299:\n        raise Exception(\"Failed to load page!\")\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    # user defined log statements using synthetics_logger\n    logger.info(\"Selenium Python heartbeat canary\")\n    return main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "dev-pdf-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-062c110ab35d1d77f", "subnet-04dd2f7d9ed7eefa5"],
                          "vpcId": "vpc-0845cc5232f7b37ed"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "dev-pdf-srv-Alarm": {
                    "id": "dev-pdf-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-pdf-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-pdf-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "dev-Alfresco-pdftron_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "dev-pdf-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "dev-share-srv": {
                    "id": "dev-share-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-share-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "devcwsynresults************useast1B52875DF"
                              },
                              "/canary/share_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "from aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    url = f'https://alfresco-share-ses-dev-internal.srrcsbs.org/share/page/user/admin/dashboard'\n\n    # Set screenshot option\n    takeScreenshot = True\n\n    browser = syn_webdriver.Chrome()\n    browser.get(url)\n\n    if takeScreenshot:\n        browser.save_screenshot(\"loaded.png\")\n\n    response_code = syn_webdriver.get_http_response(url)\n    if not response_code or response_code < 200 or response_code > 299:\n        raise Exception(\"Failed to load page!\")\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    # user defined log statements using synthetics_logger\n    logger.info(\"Selenium Python heartbeat canary\")\n    return main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "dev-share-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-062c110ab35d1d77f", "subnet-04dd2f7d9ed7eefa5"],
                          "vpcId": "vpc-0845cc5232f7b37ed"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "dev-share-srv-Alarm": {
                    "id": "dev-share-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-share-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-share-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "dev-Alfresco-share_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "dev-share-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "dev-token-srv": {
                    "id": "dev-token-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-token-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "devcwsynresults************useast1B52875DF"
                              },
                              "/canary/token_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/dev-alfresco-token_password', WithDecryption=True)\n    username = f'dev-token-ses-admin'\n    password = (parameter['Parameter']['Value'])\n\n    conn = http.client.HTTPSConnection(\n        \"alfresco-tokenservice-ses-dev-internal.srrcsbs.org\")\n\n    payload = json.dumps({\n        \"download\": True,\n        \"preview\": True,\n        \"nodeId\": \"5fa74ad3-9b5b-461b-9df5-de407f1f4fe7\",\n        \"user\": \"Jane Doe\"\n    })\n    headers = {\n        'Authorization': 'Basic {}'.format(\n            b64encode(bytes(f'{username}:{password}',\n                            'utf-8')).decode('ascii')\n        ),\n        'Content-Type': 'application/json'\n    }\n    conn.request(\"POST\", \"/tokenservice/services/api/token\", payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    print(data.decode(\"utf-8\"))\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "dev-token-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-062c110ab35d1d77f", "subnet-04dd2f7d9ed7eefa5"],
                          "vpcId": "vpc-0845cc5232f7b37ed"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "dev-token-srv-Alarm": {
                    "id": "dev-token-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-token-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/dev-token-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "dev-Alfresco-token_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "dev-token-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "CDKMetadata": {
                    "id": "CDKMetadata",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/CDKMetadata",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/CDKMetadata/Default",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.CfnResource",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  },
                  "BootstrapVersion": {
                    "id": "BootstrapVersion",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/BootstrapVersion",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnParameter",
                      "version": "1.98.0"
                    }
                  },
                  "CheckBootstrapVersion": {
                    "id": "CheckBootstrapVersion",
                    "path": "ses-cloudwatch-synthetics/SES-Dev/Cloudwatch-Synthetics/CheckBootstrapVersion",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnRule",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Stack",
                  "version": "1.98.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Stage",
              "version": "1.98.0"
            }
          },
          "SES-Qa": {
            "id": "SES-Qa",
            "path": "ses-cloudwatch-synthetics/SES-Qa",
            "children": {
              "Cloudwatch-Synthetics": {
                "id": "Cloudwatch-Synthetics",
                "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics",
                "children": {
                  "CloudWatchSynthetics-role": {
                    "id": "CloudWatchSynthetics-role",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/CloudWatchSynthetics-role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/CloudWatchSynthetics-role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "description": "Allows Lambda functions to call AWS services on your behalf.",
                            "roleName": "CloudWatchSynthetics-role"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnRole",
                          "version": "1.98.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/CloudWatchSynthetics-role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/CloudWatchSynthetics-role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ssm:DescribeParameters",
                                        "ssm:GetParameters",
                                        "ssm:GetParameter",
                                        "sts:GetCallerIdentity",
                                        "cloudwatch:PutMetricData",
                                        "ec2:CreateNetworkInterface",
                                        "s3:ListAllMyBuckets",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DeleteNetworkInterface",
                                        "xray:*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "CloudWatchSyntheticsroleDefaultPolicy567E931F",
                                "roles": [
                                  {
                                    "Ref": "CloudWatchSyntheticsrole2174489A"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Policy",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Role",
                      "version": "1.98.0"
                    }
                  },
                  "qa-cw-syn-results-************-us-east-1": {
                    "id": "qa-cw-syn-results-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cw-syn-results-************-us-east-1",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cw-syn-results-************-us-east-1/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                          "aws:cdk:cloudformation:props": {
                            "bucketName": "qa-cw-syn-results-************-us-east-1"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.CfnBucket",
                          "version": "1.98.0"
                        }
                      },
                      "Notifications": {
                        "id": "Notifications",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cw-syn-results-************-us-east-1/Notifications",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Construct",
                          "version": "1.98.0"
                        }
                      },
                      "Policy": {
                        "id": "Policy",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cw-syn-results-************-us-east-1/Policy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cw-syn-results-************-us-east-1/Policy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                              "aws:cdk:cloudformation:props": {
                                "bucket": {
                                  "Ref": "qacwsynresults************useast181CEEE4F"
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:*",
                                      "Effect": "Allow",
                                      "Principal": "*",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": ["qacwsynresults************useast181CEEE4F", "Arn"]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": ["qacwsynresults************useast181CEEE4F", "Arn"]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ],
                                      "Sid": "AllowRead"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketPolicy",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.Bucket",
                      "version": "1.98.0"
                    }
                  },
                  "LookupVpc": {
                    "id": "LookupVpc",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/LookupVpc",
                    "children": {
                      "PublicSubnet1": {
                        "id": "PublicSubnet1",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/LookupVpc/PublicSubnet1",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PublicSubnet2": {
                        "id": "PublicSubnet2",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/LookupVpc/PublicSubnet2",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PrivateSubnet1": {
                        "id": "PrivateSubnet1",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/LookupVpc/PrivateSubnet1",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PrivateSubnet2": {
                        "id": "PrivateSubnet2",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/LookupVpc/PrivateSubnet2",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "CloudWatchSyntheticsSG": {
                    "id": "CloudWatchSyntheticsSG",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/CloudWatchSyntheticsSG",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/CloudWatchSyntheticsSG/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Allows CloudWatch Synthetic Canaries to hit Alfresco endpoints",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "vpcId": "vpc-01c22840c3fcfb0fb"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
                      "version": "1.98.0"
                    }
                  },
                  "Imported-nonprod-Topic": {
                    "id": "Imported-nonprod-Topic",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/Imported-nonprod-Topic",
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-sns.TopicBase",
                      "version": "1.98.0"
                    }
                  },
                  "qa-cnt-srv-live": {
                    "id": "qa-cnt-srv-live",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cnt-srv-live",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "qacwsynresults************useast181CEEE4F"
                              },
                              "/canary/content-service-live"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" % json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" % response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    url1 = 'https://alfresco-ses-qa-internal.srrcsbs.org/alfresco/api/-default-/public/alfresco/versions/1/probes/-live-'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {}\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "qa-cnt-srv-live",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-05ebf645231a1b8cc", "subnet-00999de71ef4580e9"],
                          "vpcId": "vpc-01c22840c3fcfb0fb"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "qa-cnt-srv-live-Alarm": {
                    "id": "qa-cnt-srv-live-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cnt-srv-live-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cnt-srv-live-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "qa-Alfresco-content-service-live-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "qa-cnt-srv-live"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "qa-cnt-srv-rdy": {
                    "id": "qa-cnt-srv-rdy",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cnt-srv-rdy",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "qacwsynresults************useast181CEEE4F"
                              },
                              "/canary/content_service_ready"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" % json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" % response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    url1 = 'https://alfresco-ses-qa-internal.srrcsbs.org/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {}\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "qa-cnt-srv-rdy",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-05ebf645231a1b8cc", "subnet-00999de71ef4580e9"],
                          "vpcId": "vpc-01c22840c3fcfb0fb"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "qa-cnt-srv-rdy-Alarm": {
                    "id": "qa-cnt-srv-rdy-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cnt-srv-rdy-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cnt-srv-rdy-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "qa-Alfresco-content_service_ready-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "qa-cnt-srv-rdy"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "qa-cnt-srv-sum": {
                    "id": "qa-cnt-srv-sum",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cnt-srv-sum",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "qacwsynresults************useast181CEEE4F"
                              },
                              "/canary/content_service_summary"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(\n            parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" %\n                json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" %\n                                response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/qa-alfresco-alfresco_password', WithDecryption=True)\n    username = \"admin\"\n    password = (parameter['Parameter']['Value'])\n\n    url1 = f'https://alfresco-ses-qa-internal.srrcsbs.org/alfresco/s/enterprise/admin/admin-systemsummary'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {\n        \"Authorization\": \"Basic {}\".format(\n            b64encode(bytes(f\"{username}:{password}\", \"utf-8\")).decode(\"ascii\")\n        )\n    }\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "qa-cnt-srv-sum",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-05ebf645231a1b8cc", "subnet-00999de71ef4580e9"],
                          "vpcId": "vpc-01c22840c3fcfb0fb"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "qa-cnt-srv-sum-Alarm": {
                    "id": "qa-cnt-srv-sum-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cnt-srv-sum-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-cnt-srv-sum-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "qa-Alfresco-content_service_summary-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "qa-cnt-srv-sum"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "qa-dwld-srv": {
                    "id": "qa-dwld-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-dwld-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "qacwsynresults************useast181CEEE4F"
                              },
                              "/canary/download_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\ndef get_token():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/qa-alfresco-token_password', WithDecryption=True)\n    username = f'qa-token-ses-admin'\n    password = (parameter['Parameter']['Value'])\n\n    conn = http.client.HTTPSConnection(\n        \"alfresco-tokenservice-ses-dev-internal.srrcsbs.org\")\n\n    payload = json.dumps({\n        \"download\": True,\n        \"preview\": True,\n        \"nodeId\": \"5fa74ad3-9b5b-461b-9df5-de407f1f4fe7\",\n        \"user\": \"Jane Doe\"\n    })\n    headers = {\n        'Authorization': 'Basic {}'.format(\n            b64encode(bytes(f'{username}:{password}',\n                            'utf-8')).decode('ascii')\n        ),\n        'Content-Type': 'application/json',\n    }\n    conn.request(\"POST\", \"/tokenservice/services/api/token\", payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    logger.info(data.decode(\"utf-8\"))\n    token_id = json.loads(data.decode(\"utf-8\"))[\"tokenId\"]\n\n    logger.info(\"Canary successfully executed\")\n    return token_id\n\n\ndef main():\n\n    token_id = get_token()\n    \n    conn = http.client.HTTPSConnection(f'alfresco-ses-downloadservice-qa-internal.srrcsbs.org')\n    payload = ''\n    headers = {}\n    conn.request(\"GET\", f'/downloadservice/download?documentId={token_id}', payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    logger.info(data)\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()\n"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "qa-dwld-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-05ebf645231a1b8cc", "subnet-00999de71ef4580e9"],
                          "vpcId": "vpc-01c22840c3fcfb0fb"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "qa-dwld-srv-Alarm": {
                    "id": "qa-dwld-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-dwld-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-dwld-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "qa-Alfresco-download_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "qa-dwld-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "qa-pdf-srv": {
                    "id": "qa-pdf-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-pdf-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "qacwsynresults************useast181CEEE4F"
                              },
                              "/canary/pdftron_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "from aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    url = f'https://alfresco-ses-tronwebserver-qa.srrcsbs.org/preview/?filename=budget.xls&documentId=19a591d23db0786ff8e779df9a3923e8fe1840a655f91cc039831ef26d139280'\n\n    # Set screenshot option\n    takeScreenshot = True\n\n    browser = syn_webdriver.Chrome()\n    browser.get(url)\n\n    if takeScreenshot:\n        browser.save_screenshot(\"loaded.png\")\n\n    response_code = syn_webdriver.get_http_response(url)\n    if not response_code or response_code < 200 or response_code > 299:\n        raise Exception(\"Failed to load page!\")\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    # user defined log statements using synthetics_logger\n    logger.info(\"Selenium Python heartbeat canary\")\n    return main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "qa-pdf-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-05ebf645231a1b8cc", "subnet-00999de71ef4580e9"],
                          "vpcId": "vpc-01c22840c3fcfb0fb"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "qa-pdf-srv-Alarm": {
                    "id": "qa-pdf-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-pdf-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-pdf-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "qa-Alfresco-pdftron_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "qa-pdf-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "qa-share-srv": {
                    "id": "qa-share-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-share-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "qacwsynresults************useast181CEEE4F"
                              },
                              "/canary/share_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "from aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    url = f'https://alfresco-share-ses-qa-internal.srrcsbs.org/share/page/user/admin/dashboard'\n\n    # Set screenshot option\n    takeScreenshot = True\n\n    browser = syn_webdriver.Chrome()\n    browser.get(url)\n\n    if takeScreenshot:\n        browser.save_screenshot(\"loaded.png\")\n\n    response_code = syn_webdriver.get_http_response(url)\n    if not response_code or response_code < 200 or response_code > 299:\n        raise Exception(\"Failed to load page!\")\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    # user defined log statements using synthetics_logger\n    logger.info(\"Selenium Python heartbeat canary\")\n    return main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "qa-share-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-05ebf645231a1b8cc", "subnet-00999de71ef4580e9"],
                          "vpcId": "vpc-01c22840c3fcfb0fb"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "qa-share-srv-Alarm": {
                    "id": "qa-share-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-share-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-share-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "qa-Alfresco-share_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "qa-share-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "qa-token-srv": {
                    "id": "qa-token-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-token-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "qacwsynresults************useast181CEEE4F"
                              },
                              "/canary/token_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/qa-alfresco-token_password', WithDecryption=True)\n    username = f'qa-token-ses-admin'\n    password = (parameter['Parameter']['Value'])\n\n    conn = http.client.HTTPSConnection(\n        \"alfresco-tokenservice-ses-dev-internal.srrcsbs.org\")\n\n    payload = json.dumps({\n        \"download\": True,\n        \"preview\": True,\n        \"nodeId\": \"5fa74ad3-9b5b-461b-9df5-de407f1f4fe7\",\n        \"user\": \"Jane Doe\"\n    })\n    headers = {\n        'Authorization': 'Basic {}'.format(\n            b64encode(bytes(f'{username}:{password}',\n                            'utf-8')).decode('ascii')\n        ),\n        'Content-Type': 'application/json'\n    }\n    conn.request(\"POST\", \"/tokenservice/services/api/token\", payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    print(data.decode(\"utf-8\"))\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "qa-token-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-05ebf645231a1b8cc", "subnet-00999de71ef4580e9"],
                          "vpcId": "vpc-01c22840c3fcfb0fb"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "qa-token-srv-Alarm": {
                    "id": "qa-token-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-token-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/qa-token-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "qa-Alfresco-token_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "qa-token-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "CDKMetadata": {
                    "id": "CDKMetadata",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/CDKMetadata",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/CDKMetadata/Default",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.CfnResource",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  },
                  "BootstrapVersion": {
                    "id": "BootstrapVersion",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/BootstrapVersion",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnParameter",
                      "version": "1.98.0"
                    }
                  },
                  "CheckBootstrapVersion": {
                    "id": "CheckBootstrapVersion",
                    "path": "ses-cloudwatch-synthetics/SES-Qa/Cloudwatch-Synthetics/CheckBootstrapVersion",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnRule",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Stack",
                  "version": "1.98.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Stage",
              "version": "1.98.0"
            }
          },
          "SES-Test": {
            "id": "SES-Test",
            "path": "ses-cloudwatch-synthetics/SES-Test",
            "children": {
              "Cloudwatch-Synthetics": {
                "id": "Cloudwatch-Synthetics",
                "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics",
                "children": {
                  "CloudWatchSynthetics-role": {
                    "id": "CloudWatchSynthetics-role",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/CloudWatchSynthetics-role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/CloudWatchSynthetics-role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "description": "Allows Lambda functions to call AWS services on your behalf.",
                            "roleName": "CloudWatchSynthetics-role"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnRole",
                          "version": "1.98.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/CloudWatchSynthetics-role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/CloudWatchSynthetics-role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ssm:DescribeParameters",
                                        "ssm:GetParameters",
                                        "ssm:GetParameter",
                                        "sts:GetCallerIdentity",
                                        "cloudwatch:PutMetricData",
                                        "ec2:CreateNetworkInterface",
                                        "s3:ListAllMyBuckets",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DeleteNetworkInterface",
                                        "xray:*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "CloudWatchSyntheticsroleDefaultPolicy567E931F",
                                "roles": [
                                  {
                                    "Ref": "CloudWatchSyntheticsrole2174489A"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Policy",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Role",
                      "version": "1.98.0"
                    }
                  },
                  "test-cw-syn-results-************-us-east-1": {
                    "id": "test-cw-syn-results-************-us-east-1",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cw-syn-results-************-us-east-1",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cw-syn-results-************-us-east-1/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                          "aws:cdk:cloudformation:props": {
                            "bucketName": "test-cw-syn-results-************-us-east-1"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.CfnBucket",
                          "version": "1.98.0"
                        }
                      },
                      "Notifications": {
                        "id": "Notifications",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cw-syn-results-************-us-east-1/Notifications",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Construct",
                          "version": "1.98.0"
                        }
                      },
                      "Policy": {
                        "id": "Policy",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cw-syn-results-************-us-east-1/Policy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cw-syn-results-************-us-east-1/Policy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                              "aws:cdk:cloudformation:props": {
                                "bucket": {
                                  "Ref": "testcwsynresults************useast122350E1D"
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:*",
                                      "Effect": "Allow",
                                      "Principal": "*",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": ["testcwsynresults************useast122350E1D", "Arn"]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": ["testcwsynresults************useast122350E1D", "Arn"]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ],
                                      "Sid": "AllowRead"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
                              "version": "1.98.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketPolicy",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.Bucket",
                      "version": "1.98.0"
                    }
                  },
                  "LookupVpc": {
                    "id": "LookupVpc",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/LookupVpc",
                    "children": {
                      "PublicSubnet1": {
                        "id": "PublicSubnet1",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/LookupVpc/PublicSubnet1",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PublicSubnet2": {
                        "id": "PublicSubnet2",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/LookupVpc/PublicSubnet2",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PrivateSubnet1": {
                        "id": "PrivateSubnet1",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/LookupVpc/PrivateSubnet1",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      },
                      "PrivateSubnet2": {
                        "id": "PrivateSubnet2",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/LookupVpc/PrivateSubnet2",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Resource",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.98.0"
                    }
                  },
                  "CloudWatchSyntheticsSG": {
                    "id": "CloudWatchSyntheticsSG",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/CloudWatchSyntheticsSG",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/CloudWatchSyntheticsSG/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Allows CloudWatch Synthetic Canaries to hit Alfresco endpoints",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "vpcId": "vpc-090876ecb5fe52b6c"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
                      "version": "1.98.0"
                    }
                  },
                  "Imported-nonprod-Topic": {
                    "id": "Imported-nonprod-Topic",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/Imported-nonprod-Topic",
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-sns.TopicBase",
                      "version": "1.98.0"
                    }
                  },
                  "test-cnt-srv-live": {
                    "id": "test-cnt-srv-live",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cnt-srv-live",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "testcwsynresults************useast122350E1D"
                              },
                              "/canary/content-service-live"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" % json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" % response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    url1 = 'https://alfresco-ses-test-internal.srrcsbs.org/alfresco/api/-default-/public/alfresco/versions/1/probes/-live-'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {}\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "test-cnt-srv-live",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0c28f225726411559", "subnet-0f610f2b6eb809cfd"],
                          "vpcId": "vpc-090876ecb5fe52b6c"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "test-cnt-srv-live-Alarm": {
                    "id": "test-cnt-srv-live-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cnt-srv-live-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cnt-srv-live-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "test-Alfresco-content-service-live-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "test-cnt-srv-live"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "test-cnt-srv-rdy": {
                    "id": "test-cnt-srv-rdy",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cnt-srv-rdy",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "testcwsynresults************useast122350E1D"
                              },
                              "/canary/content_service_ready"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" % json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" % response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    url1 = 'https://alfresco-ses-test-internal.srrcsbs.org/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {}\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "test-cnt-srv-rdy",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0c28f225726411559", "subnet-0f610f2b6eb809cfd"],
                          "vpcId": "vpc-090876ecb5fe52b6c"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "test-cnt-srv-rdy-Alarm": {
                    "id": "test-cnt-srv-rdy-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cnt-srv-rdy-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cnt-srv-rdy-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "test-Alfresco-content_service_ready-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "test-cnt-srv-rdy"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "test-cnt-srv-sum": {
                    "id": "test-cnt-srv-sum",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cnt-srv-sum",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "testcwsynresults************useast122350E1D"
                              },
                              "/canary/content_service_summary"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef verify_request(method, url, post_data=None, headers={}):\n    parsed_url = urllib.parse.urlparse(url)\n    user_agent = str(syn_webdriver.get_canary_user_agent_string())\n    if \"User-Agent\" in headers:\n        headers[\"User-Agent\"] = \" \".join([user_agent, headers[\"User-Agent\"]])\n    else:\n        headers[\"User-Agent\"] = \"{}\".format(user_agent)\n\n    logger.info(\"Making request with Method: '%s' URL: %s: Data: %s Headers: %s\" % (\n        method, url, json.dumps(post_data), json.dumps(headers)))\n\n    if parsed_url.scheme == \"https\":\n        conn = http.client.HTTPSConnection(\n            parsed_url.hostname, parsed_url.port)\n    else:\n        conn = http.client.HTTPConnection(parsed_url.hostname, parsed_url.port)\n\n    conn.request(method, url, str(post_data), headers)\n    response = conn.getresponse()\n    logger.info(\"Status Code: %s \" % response.status)\n    logger.info(\"Response Headers: %s\" %\n                json.dumps(response.headers.as_string()))\n\n    if not response.status or response.status < 200 or response.status > 299:\n        try:\n            logger.error(\"Response: %s\" % response.read().decode())\n        finally:\n            if response.reason:\n                conn.close()\n                raise Exception(\"Failed: %s\" % response.reason)\n            else:\n                conn.close()\n                raise Exception(\"Failed with status code: %s\" %\n                                response.status)\n\n    logger.info(\"Response: %s\" % response.read().decode())\n    logger.info(\"HTTP request successfully executed\")\n    conn.close()\n\n\ndef main():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/test-alfresco-alfresco_password', WithDecryption=True)\n    username = \"admin\"\n    password = (parameter['Parameter']['Value'])\n\n    url1 = f'https://alfresco-ses-test-internal.srrcsbs.org/alfresco/s/enterprise/admin/admin-systemsummary'\n    method1 = 'GET'\n    postData1 = \"\"\n    headers1 = {\n        \"Authorization\": \"Basic {}\".format(\n            b64encode(bytes(f\"{username}:{password}\", \"utf-8\")).decode(\"ascii\")\n        )\n    }\n\n    verify_request(method1, url1, None, headers1)\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "test-cnt-srv-sum",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0c28f225726411559", "subnet-0f610f2b6eb809cfd"],
                          "vpcId": "vpc-090876ecb5fe52b6c"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "test-cnt-srv-sum-Alarm": {
                    "id": "test-cnt-srv-sum-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cnt-srv-sum-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-cnt-srv-sum-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "test-Alfresco-content_service_summary-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "test-cnt-srv-sum"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "test-dwld-srv": {
                    "id": "test-dwld-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-dwld-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "testcwsynresults************useast122350E1D"
                              },
                              "/canary/download_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\ndef get_token():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/test-alfresco-token_password', WithDecryption=True)\n    username = f'test-token-ses-admin'\n    password = (parameter['Parameter']['Value'])\n\n    conn = http.client.HTTPSConnection(\n        \"alfresco-tokenservice-ses-dev-internal.srrcsbs.org\")\n\n    payload = json.dumps({\n        \"download\": True,\n        \"preview\": True,\n        \"nodeId\": \"5fa74ad3-9b5b-461b-9df5-de407f1f4fe7\",\n        \"user\": \"Jane Doe\"\n    })\n    headers = {\n        'Authorization': 'Basic {}'.format(\n            b64encode(bytes(f'{username}:{password}',\n                            'utf-8')).decode('ascii')\n        ),\n        'Content-Type': 'application/json',\n    }\n    conn.request(\"POST\", \"/tokenservice/services/api/token\", payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    logger.info(data.decode(\"utf-8\"))\n    token_id = json.loads(data.decode(\"utf-8\"))[\"tokenId\"]\n\n    logger.info(\"Canary successfully executed\")\n    return token_id\n\n\ndef main():\n\n    token_id = get_token()\n    \n    conn = http.client.HTTPSConnection(f'alfresco-ses-downloadservice-test-internal.srrcsbs.org')\n    payload = ''\n    headers = {}\n    conn.request(\"GET\", f'/downloadservice/download?documentId={token_id}', payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    logger.info(data)\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main()\n"
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "test-dwld-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0c28f225726411559", "subnet-0f610f2b6eb809cfd"],
                          "vpcId": "vpc-090876ecb5fe52b6c"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "test-dwld-srv-Alarm": {
                    "id": "test-dwld-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-dwld-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-dwld-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "test-Alfresco-download_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "test-dwld-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "test-pdf-srv": {
                    "id": "test-pdf-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-pdf-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "testcwsynresults************useast122350E1D"
                              },
                              "/canary/pdftron_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "from aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    url = f'https://alfresco-ses-tronwebserver-test.srrcsbs.org/preview/?filename=budget.xls&documentId=19a591d23db0786ff8e779df9a3923e8fe1840a655f91cc039831ef26d139280'\n\n    # Set screenshot option\n    takeScreenshot = True\n\n    browser = syn_webdriver.Chrome()\n    browser.get(url)\n\n    if takeScreenshot:\n        browser.save_screenshot(\"loaded.png\")\n\n    response_code = syn_webdriver.get_http_response(url)\n    if not response_code or response_code < 200 or response_code > 299:\n        raise Exception(\"Failed to load page!\")\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    # user defined log statements using synthetics_logger\n    logger.info(\"Selenium Python heartbeat canary\")\n    return main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "test-pdf-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0c28f225726411559", "subnet-0f610f2b6eb809cfd"],
                          "vpcId": "vpc-090876ecb5fe52b6c"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "test-pdf-srv-Alarm": {
                    "id": "test-pdf-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-pdf-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-pdf-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "test-Alfresco-pdftron_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "test-pdf-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "test-share-srv": {
                    "id": "test-share-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-share-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "testcwsynresults************useast122350E1D"
                              },
                              "/canary/share_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "from aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    url = f'https://alfresco-share-ses-test-internal.srrcsbs.org/share/page/user/admin/dashboard'\n\n    # Set screenshot option\n    takeScreenshot = True\n\n    browser = syn_webdriver.Chrome()\n    browser.get(url)\n\n    if takeScreenshot:\n        browser.save_screenshot(\"loaded.png\")\n\n    response_code = syn_webdriver.get_http_response(url)\n    if not response_code or response_code < 200 or response_code > 299:\n        raise Exception(\"Failed to load page!\")\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    # user defined log statements using synthetics_logger\n    logger.info(\"Selenium Python heartbeat canary\")\n    return main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "test-share-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0c28f225726411559", "subnet-0f610f2b6eb809cfd"],
                          "vpcId": "vpc-090876ecb5fe52b6c"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "test-share-srv-Alarm": {
                    "id": "test-share-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-share-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-share-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "test-Alfresco-share_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "test-share-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "test-token-srv": {
                    "id": "test-token-srv",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-token-srv",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Synthetics::Canary",
                      "aws:cdk:cloudformation:props": {
                        "artifactS3Location": {
                          "Fn::Join": [
                            "",
                            [
                              "s3://",
                              {
                                "Ref": "testcwsynresults************useast122350E1D"
                              },
                              "/canary/token_service"
                            ]
                          ]
                        },
                        "code": {
                          "handler": "handler.handler",
                          "script": "import json\nimport http.client\nimport urllib.parse\nfrom base64 import b64encode\n#import base64\nimport boto3\nfrom aws_synthetics.selenium import synthetics_webdriver as syn_webdriver\nfrom aws_synthetics.common import synthetics_logger as logger\n\n\ndef main():\n\n    ssm = boto3.client('ssm')\n    parameter = ssm.get_parameter(\n        Name=f'/cft/ses/test-alfresco-token_password', WithDecryption=True)\n    username = f'test-token-ses-admin'\n    password = (parameter['Parameter']['Value'])\n\n    conn = http.client.HTTPSConnection(\n        \"alfresco-tokenservice-ses-dev-internal.srrcsbs.org\")\n\n    payload = json.dumps({\n        \"download\": True,\n        \"preview\": True,\n        \"nodeId\": \"5fa74ad3-9b5b-461b-9df5-de407f1f4fe7\",\n        \"user\": \"Jane Doe\"\n    })\n    headers = {\n        'Authorization': 'Basic {}'.format(\n            b64encode(bytes(f'{username}:{password}',\n                            'utf-8')).decode('ascii')\n        ),\n        'Content-Type': 'application/json'\n    }\n    conn.request(\"POST\", \"/tokenservice/services/api/token\", payload, headers)\n    res = conn.getresponse()\n    data = res.read()\n    print(data.decode(\"utf-8\"))\n\n    logger.info(\"Canary successfully executed\")\n\n\ndef handler(event, context):\n    logger.info(\"Selenium Python API canary\")\n    main() "
                        },
                        "executionRoleArn": {
                          "Fn::GetAtt": ["CloudWatchSyntheticsrole2174489A", "Arn"]
                        },
                        "name": "test-token-srv",
                        "runtimeVersion": "syn-python-selenium-1.0",
                        "schedule": {
                          "expression": "rate(5 minutes)",
                          "durationInSeconds": "0"
                        },
                        "startCanaryAfterCreation": true,
                        "vpcConfig": {
                          "securityGroupIds": [
                            {
                              "Fn::GetAtt": ["CloudWatchSyntheticsSG557C9016", "GroupId"]
                            }
                          ],
                          "subnetIds": ["subnet-0c28f225726411559", "subnet-0f610f2b6eb809cfd"],
                          "vpcId": "vpc-090876ecb5fe52b6c"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-synthetics.CfnCanary",
                      "version": "1.98.0"
                    }
                  },
                  "test-token-srv-Alarm": {
                    "id": "test-token-srv-Alarm",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-token-srv-Alarm",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/test-token-srv-Alarm/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                          "aws:cdk:cloudformation:props": {
                            "comparisonOperator": "LessThanThreshold",
                            "evaluationPeriods": 3,
                            "alarmActions": ["arn:aws:sns:us-east-1:************:csbs-nonprod-alerts"],
                            "alarmDescription": "Synthetics alarm metric: SuccessPercent LessThanThreshold 90",
                            "alarmName": "test-Alfresco-token_service-Unhealthy-API-Endpoint",
                            "datapointsToAlarm": 2,
                            "dimensions": [
                              {
                                "name": "CanaryName",
                                "value": "test-token-srv"
                              }
                            ],
                            "metricName": "SuccessPercent",
                            "namespace": "CloudWatchSynthetics",
                            "period": 300,
                            "statistic": "Average",
                            "threshold": 85,
                            "treatMissingData": "ignore"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
                      "version": "1.98.0"
                    }
                  },
                  "CDKMetadata": {
                    "id": "CDKMetadata",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/CDKMetadata",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/CDKMetadata/Default",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.CfnResource",
                          "version": "1.98.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.98.0"
                    }
                  },
                  "BootstrapVersion": {
                    "id": "BootstrapVersion",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/BootstrapVersion",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnParameter",
                      "version": "1.98.0"
                    }
                  },
                  "CheckBootstrapVersion": {
                    "id": "CheckBootstrapVersion",
                    "path": "ses-cloudwatch-synthetics/SES-Test/Cloudwatch-Synthetics/CheckBootstrapVersion",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnRule",
                      "version": "1.98.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Stack",
                  "version": "1.98.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Stage",
              "version": "1.98.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "ses-cloudwatch-synthetics/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "ses-cloudwatch-synthetics/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.98.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.98.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/core.Stack",
          "version": "1.98.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "@aws-cdk/core.App",
      "version": "1.98.0"
    }
  }
}
